WG.TrayIcon = function (data) {	this.name = data.name;	this.data = data;	this.badgeText = null;	this.notification = null;	this.node = null;	this.initialized = false;};/** * Afficher un petit badge text * @return this */WG.TrayIcon.prototype.setBadgeText = function (text) {	// Delete	if (!text) {		if (this.badgeText) {			$(this.badgeText).remove();			this.badgeText = null;		}		return this;	}	// Set	if (!this.badgeText) {		this.badgeText = document.createElement('span');		this.badgeText.setAttribute('class', 'badge');		this.node.appendChild(this.badgeText);		// Propager un clic sur le badge text au lien de l'icone		var thiz = this;		this.badgeText.onclick = function () {			$(thiz.a).click();		};	}	this.badgeText.innerHTML = text;	return this;};/** * @return string|null */WG.TrayIcon.prototype.getBadgeText = function () {	return (this.badgeText) ? this.badgeText.innerHTML : null;};WG.TrayIcon.prototype.setLoadingIndicator = function (enable) {	if (enable) {		$(this.node).addClass('loading');	}	else {		$(this.node).removeClass('loading');	}	return this;};WG.TrayIcon.prototype.hasLoadingIndicator = function () {	return $(this.node).hasClass('loading');};/** * @return this */WG.TrayIcon.prototype.setNotification = function (text, onClick, duration) {	var thiz = this;	// Delete	if (!text) {		if (this.notification) {			$(this.notification).stop().fadeTo(1000, 0, function () {				$(thiz.notification).remove();				thiz.notification = null;			});		}		return this;	}	// Create notification node	if (!this.notification) {		this.notification = document.createElement('div');		this.notification.setAttribute('class', 'notification');		$(this.notification).fadeTo(0, 0);		this.node.appendChild(this.notification);	}	// Bind onclick event	if (onClick) {		this.notification.onclick = onClick;	}	// 	this.notification.innerHTML = text;	// Appear animation	$(this.notification).stop().fadeTo(1000, 0.9);	// Duration	if (this.notificationThread != null) {		clearTimeout(this.notificationThread);	}	if (!duration) duration = 6000;	if (duration) {		setTimeout(function () {			thiz.setNotification(null);		}, duration);	}	return this;}WG.util.implementListenerPattern(WG.TrayIcon.prototype);